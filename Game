
// Box2DProcessing example


import shiffman.box2d.*;
import org.jbox2d.common.*;
import org.jbox2d.dynamics.joints.*;
import org.jbox2d.collision.shapes.*;
import org.jbox2d.collision.shapes.Shape;
import org.jbox2d.common.*;
import org.jbox2d.dynamics.*;
import org.jbox2d.dynamics.contacts.*;
//Background
PImage background;
PImage Halcon;
PImage start_background;
boolean state=false;


Box2DProcessing box2d;


Box box;


ArrayList<Particle> particles;


Spring spring;
Texture texture;


float xoff = 0;
float yoff = 1000;
int screen=0;
int score=0;

void setup() {
  size(962,562);
  smooth();
  background  = loadImage("fondopelea.jpg");
  start_background = loadImage("starwarsinicio.jpg");
  Halcon  = loadImage("HalconMilenario.png");

  box2d = new Box2DProcessing(this);
  box2d.createWorld();
box2d.setGravity(0,-10);

  box2d.listenForCollisions();


  box = new Box(width/2,height/2);

  spring = new Spring();
  spring.bind(width/2,height/2,box);


  particles = new ArrayList<Particle>();


}
void draw(){
  switch(screen){
    case 0:
      background(start_background);
      if(mousePressed)
        screen++;
      break;
    case 1:
      game();
      if(state)
        screen++;
      break;
    case 2:
        background(255,255,255);
        fill(0,0,0);
        text("Final Score: ",(width/2)-140,height/2);
        text(score,(width/2)+85,height/2);
      break;
      
  }
}
void game() {  
  background(background);
  fill(255,255,255);
  textSize(40);
  text("Score: ",30,50);
  text(score,150,50);
  image(Halcon, mouseX-25, mouseY-25,60,60);
   spring.update(mouseX,mouseY);
  box.body.setAngularVelocity(0);
  if (random(10) < 0.2) {
    float sz = random(10,15);
    particles.add(new Particle(random(width),0,sz));
  }

  box2d.step();

  float x = noise(xoff)*width;
  float y = noise(yoff)*height;
  xoff += 0.01;
  yoff += 0.01;

 
  for (int i = particles.size()-1; i >= 0; i--) {
    Particle p = particles.get(i);
    p.display();

    if (p.done()) {
      particles.remove(i);
      break;
    }
  }
  

  box.display();

 
}



void beginContact(Contact cp) {

  Fixture f1 = cp.getFixtureA();
  Fixture f2 = cp.getFixtureB();

  Body b1 = f1.getBody();
  Body b2 = f2.getBody();

  Object o1 = b1.getUserData();
  Object o2 = b2.getUserData();

  if (o1.getClass() == Box.class) {
    Particle p = (Particle) o2;
    state = p.change();
    score+=10;
  } 
  else if (o2.getClass() == Box.class) {
    Particle p = (Particle) o1;
    state = p.change();
    score+=10;
  }
}



void endContact(Contact cp) {
}
